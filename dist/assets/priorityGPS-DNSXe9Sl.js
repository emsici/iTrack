const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/index-D77q8mDE.js","assets/index-DDzkQ1MM.css"])))=>i.map(i=>d[i]);
var v=Object.defineProperty;var P=(d,t,a)=>t in d?v(d,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):d[t]=a;var u=(d,t,a)=>P(d,typeof t!="symbol"?t+"":t,a);import{l as n,a as e,G as f,s as m,b as G,_ as S}from"./index-D77q8mDE.js";class g{constructor(){u(this,"activeCourses",new Map);u(this,"monitoringInterval",null);u(this,"transmissionInterval",null);u(this,"isTransmitting",!1);u(this,"gpsMethods",[{name:"Android Native",priority:1,isAvailable:()=>{var t;return!!((t=window==null?void 0:window.AndroidGPS)!=null&&t.startGPS)},start:async t=>{try{const a=window.AndroidGPS.startGPS(t.courseId,t.vehicleNumber,t.uit,t.token,t.status);return e(`✅ Android Native GPS started: ${a}`),!0}catch(a){return n(`❌ Android Native GPS failed: ${a}`),!1}},stop:async t=>{var a;try{(a=window==null?void 0:window.AndroidGPS)!=null&&a.stopGPS&&window.AndroidGPS.stopGPS(t)}catch(s){n(`❌ Android Native GPS stop failed: ${s}`)}},transmit:async t=>{var a;try{return(a=window==null?void 0:window.AndroidGPS)!=null&&a.isActive?window.AndroidGPS.isActive(t.courseId):!0}catch{return!1}}},{name:"Capacitor Plugin",priority:2,isAvailable:()=>!!(window!=null&&window.CapacitorGPS),start:async t=>{try{const a=await window.CapacitorGPS.startGPS({courseId:t.courseId,vehicleNumber:t.vehicleNumber,uit:t.uit,authToken:t.token,status:t.status});return e(`✅ Capacitor GPS started: ${a}`),a.success||!1}catch(a){return n(`❌ Capacitor GPS failed: ${a}`),!1}},stop:async t=>{var a;try{(a=window==null?void 0:window.CapacitorGPS)!=null&&a.stopGPS&&await window.CapacitorGPS.stopGPS({courseId:t})}catch(s){n(`❌ Capacitor GPS stop failed: ${s}`)}},transmit:async t=>!0},{name:"JavaScript Backup",priority:3,isAvailable:()=>!0,start:async t=>(e(`🔥 JavaScript Backup GPS started for: ${t.courseId}`),!0),stop:async t=>{e(`🛑 JavaScript Backup GPS stopped for: ${t}`)},transmit:async t=>{try{const a=await f.getCurrentPosition({enableHighAccuracy:!0,timeout:1e4,maximumAge:1e3}),s=m.getSharedTimestamp(),i={uit:t.uit,vehicleNumber:t.vehicleNumber,latitude:a.coords.latitude,longitude:a.coords.longitude,timestamp:s,accuracy:a.coords.accuracy||0,speed:a.coords.speed||0,bearing:a.coords.heading||0,altitude:a.coords.altitude||0},o=await G(i,t.token);return o.success?(e(`✅ JavaScript GPS transmitted successfully for ${t.courseId}`),!0):(n(`❌ JavaScript GPS transmission failed: ${o.error}`),!1)}catch(a){return n(`❌ JavaScript GPS error: ${a}`),!1}}}])}async startGPS(t,a,s,i,o){e(`🎯 PRIORITY GPS: Starting GPS with intelligent method selection for ${t}`);const c={courseId:t,vehicleNumber:a,uit:s,token:i,status:o,activeMethod:"none",lastSuccessfulTransmission:new Date().toISOString()};let p=!1;for(const r of this.gpsMethods.sort((l,h)=>l.priority-h.priority))if(r.isAvailable())if(e(`🔄 Trying GPS method: ${r.name} (Priority ${r.priority})`),await r.start(c)){c.activeMethod=r.name.toLowerCase().includes("android")?"android":r.name.toLowerCase().includes("capacitor")?"capacitor":"javascript",e(`✅ GPS method selected: ${r.name} for course ${t}`),p=!0;break}else e(`❌ GPS method ${r.name} failed, trying next...`);else e(`⏭️ GPS method ${r.name} not available, skipping...`);if(!p){n(`❌ No GPS methods available for course ${t}, falling back to guaranteed GPS`);try{const{guaranteedGPSService:r}=await S(async()=>{const{guaranteedGPSService:l}=await import("./index-D77q8mDE.js").then(h=>h.c);return{guaranteedGPSService:l}},__vite__mapDeps([0,1]));await r.startGuaranteedGPS(t,a,s,i,o),c.activeMethod="javascript",p=!0,e(`✅ Fallback to GuaranteedGPS successful for course ${t}`)}catch(r){throw n(`❌ Even GuaranteedGPS failed: ${r}`),new Error("All GPS methods failed including guaranteed backup")}}if(this.activeCourses.set(t,c),c.activeMethod==="android")try{e("🔒 PHONE LOCK PROTECTION: Starting GuaranteedGPS backup for Android method");const{guaranteedGPSService:r}=await S(async()=>{const{guaranteedGPSService:l}=await import("./index-D77q8mDE.js").then(h=>h.c);return{guaranteedGPSService:l}},__vite__mapDeps([0,1]));await r.startGuaranteedGPS(t,a,s,i,o),e("✅ GuaranteedGPS backup started for Android method - phone lock protected")}catch(r){n(`⚠️ Failed to start GuaranteedGPS backup: ${r}`)}this.startMonitoring(),this.startTransmissionInterval(),e(`✅ PRIORITY GPS started for ${t} using ${c.activeMethod} method with backup protection`)}async stopGPS(t){const a=this.activeCourses.get(t);if(!a){e(`⚠️ Course ${t} not found for stop`);return}e(`🛑 Stopping GPS for ${t} (method: ${a.activeMethod})`);const s=this.gpsMethods.find(i=>i.name.toLowerCase().includes(a.activeMethod));s&&await s.stop(t);try{const{guaranteedGPSService:i}=await S(async()=>{const{guaranteedGPSService:o}=await import("./index-D77q8mDE.js").then(c=>c.c);return{guaranteedGPSService:o}},__vite__mapDeps([0,1]));await i.stopGPS(t),e(`✅ GuaranteedGPS backup stopped for course ${t}`)}catch(i){e(`⚠️ GuaranteedGPS backup stop failed (maybe not running): ${i}`)}this.activeCourses.delete(t),this.activeCourses.size===0&&(this.stopMonitoring(),this.stopTransmissionInterval()),e(`✅ GPS stopped for ${t}. Active courses: ${this.activeCourses.size}`)}async updateStatus(t,a){const s=this.activeCourses.get(t);if(!s){e(`⚠️ Course ${t} not found for status update`);return}if(e(`🔄 Updating status for ${t}: ${s.status} → ${a}`),a===3||a===4){e(`🛑 GPS PRIORITAR: PAUZĂ/STOP (${a}) - Se elimină cursa ${t} din transmisia GPS activă`),await this.stopGPS(t);return}s.status=a,this.activeCourses.set(t,s),e(`✅ Status updated for ${t}: ${a}`)}startMonitoring(){this.monitoringInterval||(this.monitoringInterval=setInterval(async()=>{for(const[t,a]of this.activeCourses)await this.monitorCourse(a)},15e3),e("🔍 GPS monitoring started - checking methods every 15 seconds"))}stopMonitoring(){this.monitoringInterval&&(clearInterval(this.monitoringInterval),this.monitoringInterval=null,e("⏹️ GPS monitoring stopped"))}startTransmissionInterval(){this.transmissionInterval||this.isTransmitting||(this.transmissionInterval=setInterval(async()=>{if(!this.isTransmitting){this.isTransmitting=!0;try{const t=Array.from(this.activeCourses.values()).filter(a=>a.status===2);if(t.length>0){e(`🔥 CICLU TRANSMISIE GPS PRIORITAR: ${t.length} curse active (status 2)`);for(const a of t)e(`📡 Transmitere GPS Prioritar pentru cursa: ${a.courseId} (UIT: ${a.uit})`),await this.transmitForCourse(a)}else e("⏸️ Nicio cursă activă cu status 2 - se sare transmisia GPS Prioritar")}finally{this.isTransmitting=!1}}},5e3),e("📡 GPS transmission interval started - every 5 seconds"))}stopTransmissionInterval(){this.transmissionInterval&&(clearInterval(this.transmissionInterval),this.transmissionInterval=null,this.isTransmitting=!1,e("📡 GPS transmission interval stopped"))}async monitorCourse(t){const a=this.gpsMethods.find(i=>i.name.toLowerCase().includes(t.activeMethod));if(!a)return;await a.transmit(t)?t.lastSuccessfulTransmission=new Date:(e(`❌ GPS method ${a.name} failed for ${t.courseId}, trying fallback...`),await this.switchToFallbackMethod(t))}async switchToFallbackMethod(t){e(`🔄 Switching to fallback method for ${t.courseId}`);const a=this.gpsMethods.find(i=>i.name.toLowerCase().includes(t.activeMethod));a&&await a.stop(t.courseId);const s=this.gpsMethods.filter(i=>i.isAvailable()&&!i.name.toLowerCase().includes(t.activeMethod)).sort((i,o)=>i.priority-o.priority);for(const i of s)if(await i.start(t)){t.activeMethod=i.name.toLowerCase().includes("android")?"android":i.name.toLowerCase().includes("capacitor")?"capacitor":"javascript",e(`✅ Switched to fallback method: ${i.name} for ${t.courseId}`),this.activeCourses.set(t.courseId,t);return}n(`❌ All fallback methods failed for ${t.courseId}`)}async transmitForCourse(t){const a=this.gpsMethods.find(s=>s.name.toLowerCase().includes(t.activeMethod));if(a)try{const s=m.getSharedTimestampISO(),i=`priority_gps_${t.courseId}_${s}`;if(window[i]){e(`⏭️ ANTI-DUPLICAT: GPS Prioritar sare ${t.courseId} - deja transmis de alt serviciu în acest ciclu`);return}window[i]=!0,await a.transmit(t)&&(t.lastSuccessfulTransmission=new Date().toISOString(),this.activeCourses.set(t.courseId,t),e(`✅ GPS Prioritar transmis cu succes pentru ${t.courseId}`))}catch(s){n(`❌ Priority GPS transmission failed for ${t.courseId}: ${s}`)}}getActiveCourses(){return Array.from(this.activeCourses.keys())}hasActiveCourses(){return this.activeCourses.size>0}async logoutClearAll(){e("🧹 PRIORITY GPS: Clearing all GPS data and stopping all transmissions");const t=Array.from(this.activeCourses.keys());for(const a of t)await this.stopGPS(a);this.stopMonitoring(),this.stopTransmissionInterval(),this.activeCourses.clear(),e("✅ PRIORITY GPS: All GPS services stopped and cleared")}}const $=new g;export{$ as priorityGPSService};
