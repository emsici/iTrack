var d=Object.defineProperty;var y=(u,t,e)=>t in u?d(u,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):u[t]=e;var o=(u,t,e)=>y(u,typeof t!="symbol"?t+"":t,e);import{P as a,C as g,A as p}from"./index-Vwv9vEfU.js";const c=class c{constructor(){o(this,"STORAGE_KEY","offline_gps_coordinates");o(this,"MAX_BATCH_SIZE",50);o(this,"MAX_RETRY_ATTEMPTS",3);o(this,"syncListeners",[]);o(this,"currentStats",{totalOffline:0,totalSynced:0,syncInProgress:!1,lastSyncAttempt:null,syncErrors:0,currentBatch:0,totalBatches:0});this.loadStats(),window.saveOfflineGPS=this.saveOfflineCoordinate.bind(this),this.setupSharedPreferencesRecovery()}static getInstance(){return c.instance||(c.instance=new c),c.instance}async setupSharedPreferencesRecovery(){try{const t=await a.get({key:"android_fallback_offline_gps"});if(t.value){const e=JSON.parse(t.value);if(e.length>0){console.log(`🔄 Recuperez ${e.length} coordonate din Android SharedPreferences fallback`);const s=await this.getOfflineCoordinates();for(const r of e){const i={id:Date.now().toString()+Math.random().toString(36).substr(2,9),uit:r.uit||"",numar_inmatriculare:r.numar_inmatriculare||"",lat:r.lat||0,lng:r.lng||0,viteza:r.viteza||0,directie:r.directie||0,altitudine:r.altitudine||0,hdop:r.hdop||0,gsm_signal:r.gsm_signal||0,baterie:r.baterie||"0%",status:r.status||2,timestamp:r.timestamp||new Date().toISOString().slice(0,19).replace("T"," "),attempts:0,lastAttempt:new Date().toISOString()};s.push(i)}await a.set({key:this.STORAGE_KEY,value:JSON.stringify(s)}),await a.remove({key:"android_fallback_offline_gps"}),console.log(`✅ ${e.length} coordonate recuperate din Android SharedPreferences`),this.updateStats()}}}catch(t){console.error("❌ Eroare recuperare SharedPreferences:",t)}}async saveOfflineCoordinate(t){try{const e={id:Date.now().toString(),uit:t.uit,numar_inmatriculare:t.numar_inmatriculare,lat:t.lat,lng:t.lng,viteza:t.viteza,directie:t.directie,altitudine:t.altitudine,hdop:t.hdop,gsm_signal:t.gsm_signal,baterie:t.baterie,status:t.status,timestamp:t.timestamp,attempts:0,lastAttempt:new Date().toISOString()},s=await this.getOfflineCoordinates();s.push(e),await a.set({key:this.STORAGE_KEY,value:JSON.stringify(s)}),console.log(`💾 GPS offline salvat: UIT ${e.uit}, ${e.lat}, ${e.lng}`),this.updateStats()}catch(e){console.error("❌ Eroare salvare GPS offline:",e)}}async getOfflineCoordinates(){try{const t=await a.get({key:this.STORAGE_KEY});return t.value?JSON.parse(t.value):[]}catch(t){return console.error("❌ Eroare citire GPS offline:",t),[]}}async syncOfflineCoordinates(t){if(this.currentStats.syncInProgress)return console.log("🔄 Sincronizare în curs, skip..."),!1;try{this.currentStats.syncInProgress=!0,this.currentStats.syncErrors=0,this.currentStats.lastSyncAttempt=new Date,this.notifyListeners();const e=await this.getOfflineCoordinates();if(e.length===0)return console.log("📡 Nu există coordonate offline de sincronizat"),this.currentStats.syncInProgress=!1,this.notifyListeners(),!0;console.log(`📡 Încep sincronizarea ${e.length} coordonate offline...`);const s=this.createBatches(e);this.currentStats.totalBatches=s.length,this.currentStats.currentBatch=0;let r=0,i=[];for(let l=0;l<s.length;l++){this.currentStats.currentBatch=l+1,this.notifyListeners();const f=s[l];console.log(`📤 Trimit batch ${l+1}/${s.length} (${f.length} coordonate)`);for(const n of f)try{await this.transmitCoordinate(n,t)?(r++,this.currentStats.totalSynced++):(n.attempts++,n.lastAttempt=new Date().toISOString(),n.attempts<this.MAX_RETRY_ATTEMPTS?i.push(n):(console.log(`❌ Coordonata abandonată după ${this.MAX_RETRY_ATTEMPTS} încercări: ${n.id}`),this.currentStats.syncErrors++))}catch(S){console.error(`❌ Eroare transmisie coordonată ${n.id}:`,S),n.attempts++,n.lastAttempt=new Date().toISOString(),n.attempts<this.MAX_RETRY_ATTEMPTS?i.push(n):this.currentStats.syncErrors++}l<s.length-1&&await new Promise(n=>setTimeout(n,1e3))}return await a.set({key:this.STORAGE_KEY,value:JSON.stringify(i)}),console.log(`✅ Sincronizare completă: ${r} succes, ${i.length} rămase, ${this.currentStats.syncErrors} abandon`),this.currentStats.syncInProgress=!1,this.currentStats.totalOffline=i.length,this.notifyListeners(),r>0}catch(e){return console.error("❌ Eroare sincronizare GPS offline:",e),this.currentStats.syncInProgress=!1,this.currentStats.syncErrors++,this.notifyListeners(),!1}}async transmitCoordinate(t,e){try{let s=e;if(s||(s=(await a.get({key:"auth_token"})).value||""),!s)return console.error("❌ Nu există token pentru sincronizare offline"),!1;const r=await g.post({url:`${p}gps.php`,headers:{"Content-Type":"application/json",Authorization:`Bearer ${s}`,Accept:"application/json","User-Agent":"iTrack-OfflineSync/1.0"},data:{uit:t.uit,numar_inmatriculare:t.numar_inmatriculare,lat:t.lat,lng:t.lng,viteza:t.viteza,directie:t.directie,altitudine:t.altitudine,hdop:t.hdop,gsm_signal:t.gsm_signal,baterie:t.baterie,status:t.status,timestamp:t.timestamp}});return r.status>=200&&r.status<300?(console.log(`✅ Coordonată offline sincronizată: ${t.id} → ${r.status}`),!0):(console.log(`❌ Eșec sincronizare coordonată ${t.id}: ${r.status}`),!1)}catch(s){return console.error(`❌ Eroare transmisie coordonată ${t.id}:`,s),!1}}createBatches(t){const e=[];for(let s=0;s<t.length;s+=this.MAX_BATCH_SIZE)e.push(t.slice(s,s+this.MAX_BATCH_SIZE));return e}async updateStats(){const t=await this.getOfflineCoordinates();this.currentStats.totalOffline=t.length,this.notifyListeners()}async loadStats(){try{const t=await a.get({key:"offline_gps_stats"});if(t.value){const e=JSON.parse(t.value);this.currentStats.totalSynced=e.totalSynced||0,this.currentStats.syncErrors=e.syncErrors||0,this.currentStats.lastSyncAttempt=e.lastSyncAttempt?new Date(e.lastSyncAttempt):null}await this.updateStats()}catch(t){console.error("❌ Eroare încărcare statistici offline:",t)}}async saveStats(){var t;try{await a.set({key:"offline_gps_stats",value:JSON.stringify({totalSynced:this.currentStats.totalSynced,syncErrors:this.currentStats.syncErrors,lastSyncAttempt:(t=this.currentStats.lastSyncAttempt)==null?void 0:t.toISOString()})})}catch(e){console.error("❌ Eroare salvare statistici offline:",e)}}onSyncStatsChange(t){return this.syncListeners.push(t),t({...this.currentStats}),()=>{const e=this.syncListeners.indexOf(t);e>-1&&this.syncListeners.splice(e,1)}}notifyListeners(){this.saveStats(),this.syncListeners.forEach(t=>{t({...this.currentStats})})}getStats(){return{...this.currentStats}}async clearOfflineCoordinates(){await a.remove({key:this.STORAGE_KEY}),this.currentStats.totalOffline=0,this.notifyListeners(),console.log("🗑️ Coordonate offline curățate")}};o(c,"instance");let h=c;const _=h.getInstance();export{_ as offlineGPSService};
